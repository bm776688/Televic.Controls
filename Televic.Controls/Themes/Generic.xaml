<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:Controls="clr-namespace:Televic.Controls"
					xmlns:ed="http://schemas.microsoft.com/expression/2010/drawing"
                    xmlns:Converter="clr-namespace:Televic.Controls.Converter">

	<Converter:DoubleToLog10Converter x:Key="log10Converter" />
	<Converter:EqualityToBooleanConverter x:Key="equalityConverter" />
	<Converter:DoubleToMarginLeftConverter x:Key="marginLeftConverter" />


	<Style TargetType="{x:Type Controls:MapControl}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Controls:MapControl}">
					<Grid>
						<!-- Map Content -->
						<Border BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                ClipToBounds="{TemplateBinding ClipToBounds}">
							
							<Controls:MapPanel x:Name="PART_Presenter" ClipToBounds="False">
								<Image Source="{TemplateBinding MapImage}" Stretch="None" />
							</Controls:MapPanel>
						</Border>

						<ItemsPresenter />
						
						<!-- Zoom Control Panel -->
						<Canvas>
							<Border Padding="5"
                                    CornerRadius="5"
                                    Canvas.Left="20"
                                    Canvas.Top="20"
									Background="#88C0C0C0"
									Visibility="{TemplateBinding ZoomPanelVisibility}"
                                    ToolTipService.InitialShowDelay="0">
								<Border.Style>
									<Style TargetType="{x:Type Border}">
										<Setter Property="Opacity" Value="0.4" />
										<Style.Triggers>
											<Trigger Property="IsMouseOver" Value="True">
												<Setter Property="Opacity" Value="0.8" />
											</Trigger>
										</Style.Triggers>
									</Style>
								</Border.Style>
								<StackPanel Orientation="Vertical">
									<StackPanel.Resources>
										<Style TargetType="{x:Type RadioButton}">
											<Setter Property="Template">
												<Setter.Value>
													<ControlTemplate TargetType="{x:Type RadioButton}">
														<Border x:Name="border"
                                                                BorderBrush="Black"
                                                                Background="Silver"
                                                                BorderThickness="1"
                                                                CornerRadius="5"
                                                                Width="40"
                                                                Height="40"
                                                                Margin="2"
                                                                HorizontalAlignment="Center"
                                                                VerticalAlignment="Center">
															<ContentPresenter HorizontalAlignment="Center"
                                                                              VerticalAlignment="Center" />
														</Border>

														<ControlTemplate.Triggers>
															<Trigger Property="IsMouseOver"
                                                                     Value="True">
																<Setter TargetName="border"
                                                                        Property="Background"
                                                                        Value="WhiteSmoke" />
															</Trigger>
															<Trigger Property="IsChecked"
                                                                     Value="True">
																<Setter TargetName="border"
                                                                        Property="Background"
                                                                        Value="DarkGray" />
																<Setter TargetName="border"
                                                                        Property="TextBlock.FontWeight"
                                                                        Value="Bold" />
															</Trigger>
														</ControlTemplate.Triggers>
													</ControlTemplate>
												</Setter.Value>
											</Setter>
										</Style>
									</StackPanel.Resources>
									<Slider Height="150"
                                            Minimum="{TemplateBinding MinZoom,Converter={StaticResource log10Converter}}"
                                            Maximum="{TemplateBinding MaxZoom,Converter={StaticResource log10Converter}}"
                                            Value="{Binding RelativeSource={RelativeSource TemplatedParent},Path=Zoom,Mode=TwoWay,Converter={StaticResource log10Converter}}"
                                            HorizontalAlignment="Center"
                                            Ticks="0.1, 0.25, 0.5, 0.75, 1.0, 1.25, 1.5, 2"
                                            AutoToolTipPlacement="BottomRight"
                                            AutoToolTipPrecision="1"
                                            TickPlacement="BottomRight"
                                            TickFrequency="1"
                                            LargeChange="1"
											IsEnabled="{TemplateBinding AllowZoom}"
                                            SmallChange="0.1"
                                            Orientation="Vertical" />
									<TextBlock Text="{Binding RelativeSource={RelativeSource TemplatedParent},Path=Zoom,StringFormat='{}{0:F2}x'}"
                                               HorizontalAlignment="Center"
                                               FontWeight="Bold" />
									<RadioButton Content="1:1"
                                                 GroupName="rbgZoomMode"
												 IsEnabled="{TemplateBinding AllowZoom}"
                                                 IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent},Path=Mode,Converter={StaticResource equalityConverter},ConverterParameter={x:Static Controls:MapControlMode.Original}}" />
									<RadioButton Content="Fill"
                                                 GroupName="rbgZoomMode"
												 IsEnabled="{TemplateBinding AllowZoom}"
                                                 IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent},Path=Mode,Converter={StaticResource equalityConverter},ConverterParameter={x:Static Controls:MapControlMode.Fill}}" />
								</StackPanel>
							</Border>
						</Canvas>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>

		<!-- Pin Tag Canvas -->
		<Setter Property="ItemsPanel">
			<Setter.Value>
				<ItemsPanelTemplate>
					<Canvas Name="PART_canvas"/>
				</ItemsPanelTemplate>
			</Setter.Value>
		</Setter>

		<Setter Property="Background"
                Value="White" />
		<Setter Property="ClipToBounds"
                Value="True" />
		<Style.Triggers>
			<Trigger Property="ModifierMode"
                     Value="Pan">
				<Setter Property="Cursor"
                        Value="SizeAll" />
			</Trigger>
		</Style.Triggers>
	</Style>

	<Style TargetType="{x:Type Controls:MapItem}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Controls:MapItem}">
					<Grid Background="{TemplateBinding Background}">
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto"/>
							<RowDefinition Height="Auto"/>
						</Grid.RowDefinitions>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualStateGroup.Transitions>
									<VisualTransition GeneratedDuration="0:0:0.4">
										<VisualTransition.GeneratedEasingFunction>
											<CubicEase EasingMode="EaseOut"/>
										</VisualTransition.GeneratedEasingFunction>
									</VisualTransition>
								</VisualStateGroup.Transitions>
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="image"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="image"/>
									</Storyboard>									
								</VisualState>
								<VisualState x:Name="Disabled"/>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Image Source="{TemplateBinding Image}" Width="{TemplateBinding ImageWidth}" Height="{TemplateBinding ImageHeight}" UseLayoutRounding="False" Stretch="Fill" HorizontalAlignment="Left" VerticalAlignment="Bottom"/>
						<Image x:Name="image" Width="{TemplateBinding ImageWidth}" Height="{TemplateBinding ImageHeight}" Stretch="Fill" UseLayoutRounding="False" HorizontalAlignment="Left" VerticalAlignment="Bottom" Source="{TemplateBinding Image}" RenderTransformOrigin="0.5, 1" Opacity="0">
							<Image.RenderTransform>
								<ScaleTransform ScaleX="1.5" ScaleY="1.5" />
							</Image.RenderTransform>
						</Image>
						<Grid Name="PART_grid" Visibility="Hidden" Margin="{TemplateBinding PopPanelOffset}">
							<ContentControl Name="PART_content"/>
							<Image Name="PART_close" Source="/Televic.Controls;component/Themes/close.png" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="2"/>
						</Grid>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>

		<Setter Property="PopPanelTemplate">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Controls:MapItem}">
					<Border Height="153" Width="115" BorderBrush="DarkGray" Background="#33333333">
						<Grid >
							<StackPanel>
								<StackPanel Orientation="Horizontal" />
								<StackPanel Orientation="Horizontal" />
								<StackPanel Orientation="Horizontal" />
							</StackPanel>
							<Button HorizontalAlignment="Right" VerticalAlignment="Top" x:Name="buttonClose"/>
						</Grid>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="{x:Type Controls:SearchTabControl}">
		<Setter Property="Padding" Value="2"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Background" Value="White"/>
		<Setter Property="BorderBrush" Value="#FF898C95"/>
		<Setter Property="BorderThickness" Value="2"/>
		<Setter Property="Foreground" Value="Black"/>
		<Setter Property="TabPanelBackground" Value="#FFB0CB1F"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Controls:SearchTabControl}">
					<Grid x:Name="templateRoot" ClipToBounds="True" SnapsToDevicePixels="True" KeyboardNavigation.TabNavigation="Local">
						<Grid.ColumnDefinitions>
							<ColumnDefinition x:Name="ColumnDefinition0"/>
							<ColumnDefinition x:Name="ColumnDefinition1" Width="0"/>
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition x:Name="RowDefinition0" Height="Auto"/>
							<RowDefinition x:Name="RowDefinition1" Height="Auto"/>
							<RowDefinition x:Name="RowDefinition2" Height="*"/>
						</Grid.RowDefinitions>
						<TabPanel x:Name="HeaderPanel" Grid.Column="0" IsItemsHost="True" Margin="0" Grid.Row="0" KeyboardNavigation.TabIndex="1" Panel.ZIndex="1" Background="{TemplateBinding TabPanelBackground}"/>

						<Grid Width="{TemplateBinding SearchBarWidth}" Height="20" HorizontalAlignment="Right" Margin="10,0,15,0" Background="White" Panel.ZIndex="2" Visibility="{TemplateBinding SearchBarVisibility}">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="*" />
								<ColumnDefinition Width="Auto" />
							</Grid.ColumnDefinitions>
							<TextBox x:Name="PART_searchBar" Text="{Binding RelativeSource={RelativeSource TemplatedParent},Path=SearchBarText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" >
								<TextBox.Style>
									<Style TargetType="{x:Type TextBox}">
										<Setter Property="Background" Value="White"/>
										<Setter Property="BorderBrush" Value="#FFE2E3EA"/>
										<Setter Property="Foreground" Value="Black"/>
										<Setter Property="BorderThickness" Value="1"/>
										<Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
										<Setter Property="HorizontalContentAlignment" Value="Left"/>
										<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
										<Setter Property="AllowDrop" Value="True"/>
										<Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
										<Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
										<Setter Property="Template">
											<Setter.Value>
												<ControlTemplate TargetType="{x:Type TextBox}">
													<ScrollViewer x:Name="PART_ContentHost" Focusable="False" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
												</ControlTemplate>
											</Setter.Value>
										</Setter>
									</Style>
								</TextBox.Style>
							</TextBox>
							<Canvas x:Name="searchIcon" Background="White" Grid.Column="1" Width="17" Height="17" Margin="2,0,2,0">
								<Path RenderTransformOrigin="0.5,0.5" Width="17" Height="17" Stretch="Fill" Fill="#FFB0CB1F" Data="F1 M 14.8076,31.1139L 20.0677,25.9957C 19.3886,24.8199 19.25,23.4554 19.25,22C 19.25,17.5817 22.5817,14 27,14C 31.4183,14 35,17.5817 35,22C 35,26.4183 31.4183,29.75 27,29.75C 25.6193,29.75 24.3204,29.6502 23.1868,29.0345L 17.8861,34.1924C 17.105,34.9734 15.5887,34.9734 14.8076,34.1924C 14.0266,33.4113 14.0266,31.895 14.8076,31.1139 Z M 27,17C 24.2386,17 22,19.2386 22,22C 22,24.7614 24.2386,27 27,27C 29.7614,27 32,24.7614 32,22C 32,19.2386 29.7614,17 27,17 Z ">
									<Path.RenderTransform>
										<ScaleTransform ScaleX="-1" />
									</Path.RenderTransform>
								</Path>
							</Canvas>
						</Grid>


						<Path x:Name="navigateShape" Data="M0,0 L14,0 7,8 z" Fill="#FF809B2F" HorizontalAlignment="Left" Grid.ColumnSpan="3" Margin="{TemplateBinding NavigateLeftPosition,Converter={StaticResource marginLeftConverter}}" Grid.Row="1" />

						<Border Margin="0,2,0,0" x:Name="ContentPanel" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Column="0" KeyboardNavigation.DirectionalNavigation="Contained" Grid.Row="2" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local" BorderBrush="#FFDDBFBF">
							<ContentPresenter x:Name="PART_SelectedContentHost" ContentTemplate="{TemplateBinding SelectedContentTemplate}" Content="{TemplateBinding SelectedContent}" ContentStringFormat="{TemplateBinding SelectedContentStringFormat}" ContentSource="SelectedContent" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
						</Border>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="ItemContainerStyle">
			<Setter.Value>
				<Style TargetType="{x:Type TabItem}">
					<Setter Property="FocusVisualStyle">
						<Setter.Value>
							<Style>
								<Setter Property="Control.Template">
									<Setter.Value>
										<ControlTemplate>
											<Rectangle Margin="2" SnapsToDevicePixels="True" Stroke="Black" StrokeThickness="1" StrokeDashArray="1 2"/>
										</ControlTemplate>
									</Setter.Value>
								</Setter>
							</Style>
						</Setter.Value>
					</Setter>
					<Setter Property="Foreground" Value="White"/>
					<Setter Property="Background" Value="Transparent"/>
					<Setter Property="BorderBrush" Value="Transparent"/>
					<Setter Property="Margin" Value="0"/>
					<Setter Property="Padding" Value="16,10"/>
					<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
					<Setter Property="VerticalContentAlignment" Value="Stretch"/>
					<Setter Property="FontFamily" Value="arial"/>

					<Setter Property="Template">
						<Setter.Value>
							<ControlTemplate TargetType="{x:Type TabItem}">
								<Grid x:Name="templateRoot" SnapsToDevicePixels="True">
									<Grid.RowDefinitions>
										<RowDefinition Height="Auto"/>
										<RowDefinition Height="*"/>
									</Grid.RowDefinitions>
									<Border x:Name="mainBorder" BorderThickness="0" Background="{TemplateBinding Background}" Margin="0">
										<Border x:Name="innerBorder" BorderBrush="{x:Null}" BorderThickness="1" Background="{x:Null}" Margin="-1" Opacity="0"/>
									</Border>
									<ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header" Focusable="False" HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}"/>


								</Grid>
								<ControlTemplate.Triggers>
									<Trigger Property="IsMouseOver" Value="True">
										<Setter Property="Background" TargetName="mainBorder" Value="#FF98B337"/>
									</Trigger>
									<Trigger Property="IsEnabled" Value="False">
										<Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
									</Trigger>
									<Trigger Property="IsSelected" Value="True">
										<Setter Property="Panel.ZIndex" Value="1"/>
										<Setter Property="Background" TargetName="mainBorder" Value="#FF809B2F"/>
										<Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
									</Trigger>
								</ControlTemplate.Triggers>
							</ControlTemplate>
						</Setter.Value>
					</Setter>
				</Style>
			</Setter.Value>
		</Setter>
	</Style>

    <Style TargetType="{x:Type Controls:GridCalendar}">
		<Setter Property="Foreground" Value="#FF333333"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Calendar}">
					<Grid x:Name="PART_Root">
						<CalendarItem x:Name="PART_CalendarItem" Style="{TemplateBinding CalendarItemStyle}"/>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="CalendarButtonStyle">
			<Setter.Value>
				<Style TargetType="{x:Type CalendarButton}">
					<Setter Property="Background" Value="Transparent"/>
					<Setter Property="MinWidth" Value="40"/>
					<Setter Property="MinHeight" Value="42"/>
					<Setter Property="FontSize" Value="10"/>
					<Setter Property="HorizontalContentAlignment" Value="Center"/>
					<Setter Property="VerticalContentAlignment" Value="Center"/>
					<Setter Property="Template">
						<Setter.Value>
							<ControlTemplate TargetType="{x:Type CalendarButton}">
								<Grid>
									<VisualStateManager.VisualStateGroups>
										<VisualStateGroup x:Name="CommonStates">
											<VisualStateGroup.Transitions>
												<VisualTransition GeneratedDuration="0:0:0.1"/>
											</VisualStateGroup.Transitions>
											<VisualState x:Name="Normal"/>
											<VisualState x:Name="MouseOver">
												<Storyboard>
													<DoubleAnimation Duration="0" To=".5" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Background"/>
												</Storyboard>
											</VisualState>
											<VisualState x:Name="Pressed">
												<Storyboard>
													<DoubleAnimation Duration="0" To=".5" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Background"/>
												</Storyboard>
											</VisualState>
										</VisualStateGroup>
										<VisualStateGroup x:Name="SelectionStates">
											<VisualStateGroup.Transitions>
												<VisualTransition GeneratedDuration="0"/>
											</VisualStateGroup.Transitions>
											<VisualState x:Name="Unselected"/>
											<VisualState x:Name="Selected">
												<Storyboard>
													<DoubleAnimation Duration="0" To=".75" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedBackground"/>
												</Storyboard>
											</VisualState>
										</VisualStateGroup>
										<VisualStateGroup x:Name="ActiveStates">
											<VisualStateGroup.Transitions>
												<VisualTransition GeneratedDuration="0"/>
											</VisualStateGroup.Transitions>
											<VisualState x:Name="Active"/>
											<VisualState x:Name="Inactive">
												<Storyboard>
													<ColorAnimation Duration="0" To="#FF777777" Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="NormalText"/>
												</Storyboard>
											</VisualState>
										</VisualStateGroup>
										<VisualStateGroup x:Name="CalendarButtonFocusStates">
											<VisualStateGroup.Transitions>
												<VisualTransition GeneratedDuration="0"/>
											</VisualStateGroup.Transitions>
											<VisualState x:Name="CalendarButtonFocused">
												<Storyboard>
													<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="CalendarButtonFocusVisual">
														<DiscreteObjectKeyFrame KeyTime="0">
															<DiscreteObjectKeyFrame.Value>
																<Visibility>Visible</Visibility>
															</DiscreteObjectKeyFrame.Value>
														</DiscreteObjectKeyFrame>
													</ObjectAnimationUsingKeyFrames>
												</Storyboard>
											</VisualState>
											<VisualState x:Name="CalendarButtonUnfocused">
												<Storyboard>
													<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="CalendarButtonFocusVisual">
														<DiscreteObjectKeyFrame KeyTime="0">
															<DiscreteObjectKeyFrame.Value>
																<Visibility>Collapsed</Visibility>
															</DiscreteObjectKeyFrame.Value>
														</DiscreteObjectKeyFrame>
													</ObjectAnimationUsingKeyFrames>
												</Storyboard>
											</VisualState>
										</VisualStateGroup>
									</VisualStateManager.VisualStateGroups>
									<Rectangle x:Name="SelectedBackground" Fill="#FFB6C931" Opacity="0" RadiusY="1" RadiusX="1"/>
									<Rectangle x:Name="Background" Fill="#FFCAD291" Opacity="0" RadiusY="1" RadiusX="1"/>
									<ContentPresenter x:Name="NormalText" TextElement.Foreground="#FF333333" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="1,0,1,1" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
									<Rectangle x:Name="CalendarButtonFocusVisual" IsHitTestVisible="false" RadiusY="1" RadiusX="1" Visibility="Collapsed"/>
								</Grid>
								<ControlTemplate.Triggers>
									<Trigger Property="IsFocused" Value="True">
										<Setter Property="Visibility" TargetName="CalendarButtonFocusVisual" Value="Visible"/>
									</Trigger>
								</ControlTemplate.Triggers>
							</ControlTemplate>
						</Setter.Value>
					</Setter>
				</Style>
			</Setter.Value>
			
		</Setter>
		<Setter Property="CalendarDayButtonStyle">
			<Setter.Value>
				<Style TargetType="{x:Type CalendarDayButton}">
					<Setter Property="MinWidth" Value="5"/>
					<Setter Property="MinHeight" Value="5"/>
					<Setter Property="FontSize" Value="10"/>
					<Setter Property="HorizontalContentAlignment" Value="Center"/>
					<Setter Property="VerticalContentAlignment" Value="Center"/>
					<Setter Property="BorderBrush" Value="Black"/>
					<Setter Property="BorderThickness" Value="0.5" />
					<Setter Property="Background" Value="{x:Null}" />
					<Setter Property="Template">
						<Setter.Value>
							<ControlTemplate TargetType="{x:Type CalendarDayButton}">
								<Grid>
									<VisualStateManager.VisualStateGroups>
										<VisualStateGroup x:Name="CommonStates">
											<VisualStateGroup.Transitions>
												<VisualTransition GeneratedDuration="0:0:0.1"/>
											</VisualStateGroup.Transitions>
											<VisualState x:Name="Normal"/>
											<VisualState x:Name="MouseOver">
												<Storyboard>
													<DoubleAnimation Storyboard.TargetName="HighlightBackground" Storyboard.TargetProperty="Opacity" To="0.5" Duration="0"/>
												</Storyboard>
											</VisualState>
											<VisualState x:Name="Pressed">
												<Storyboard>
													<DoubleAnimation Storyboard.TargetName="HighlightBackground" Storyboard.TargetProperty="Opacity" To="0.5" Duration="0"/>
												</Storyboard>
											</VisualState>
											<VisualState x:Name="Disabled">
												<Storyboard>
													<DoubleAnimation Storyboard.TargetName="HighlightBackground" Storyboard.TargetProperty="Opacity" To="0" Duration="0"/>
													<DoubleAnimation Storyboard.TargetName="NormalText" Storyboard.TargetProperty="Opacity" To=".35" Duration="0"/>
												</Storyboard>
											</VisualState>
										</VisualStateGroup>
										<VisualStateGroup x:Name="SelectionStates">
											<VisualStateGroup.Transitions>
												<VisualTransition GeneratedDuration="0"/>
											</VisualStateGroup.Transitions>
											<VisualState x:Name="Unselected"/>
											<VisualState x:Name="Selected">
												<Storyboard>
													<DoubleAnimation Storyboard.TargetName="SelectedBackground" Storyboard.TargetProperty="Opacity" To=".75" Duration="0"/>
												</Storyboard>
											</VisualState>
										</VisualStateGroup>
										<VisualStateGroup x:Name="CalendarButtonFocusStates">
											<VisualStateGroup.Transitions>
												<VisualTransition GeneratedDuration="0"/>
											</VisualStateGroup.Transitions>
											<VisualState x:Name="CalendarButtonFocused">
												<Storyboard>
													<ObjectAnimationUsingKeyFrames Storyboard.TargetName="DayButtonFocusVisual" Storyboard.TargetProperty="Visibility" Duration="0">
														<DiscreteObjectKeyFrame KeyTime="0">
															<DiscreteObjectKeyFrame.Value>
																<Visibility>Visible</Visibility>
															</DiscreteObjectKeyFrame.Value>
														</DiscreteObjectKeyFrame>
													</ObjectAnimationUsingKeyFrames>
												</Storyboard>
											</VisualState>
											<VisualState x:Name="CalendarButtonUnfocused">
												<Storyboard>
													<ObjectAnimationUsingKeyFrames Storyboard.TargetName="DayButtonFocusVisual" Storyboard.TargetProperty="Visibility" Duration="0">
														<DiscreteObjectKeyFrame KeyTime="0">
															<DiscreteObjectKeyFrame.Value>
																<Visibility>Collapsed</Visibility>
															</DiscreteObjectKeyFrame.Value>
														</DiscreteObjectKeyFrame>
													</ObjectAnimationUsingKeyFrames>
												</Storyboard>
											</VisualState>
										</VisualStateGroup>
										<VisualStateGroup x:Name="ActiveStates">
											<VisualStateGroup.Transitions>
												<VisualTransition GeneratedDuration="0"/>
											</VisualStateGroup.Transitions>
											<VisualState x:Name="Active"/>
											<VisualState x:Name="Inactive">
												<Storyboard>
													<ColorAnimation Storyboard.TargetName="NormalText" Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" To="#FF777777" Duration="0"/>
												</Storyboard>
											</VisualState>
										</VisualStateGroup>
										<VisualStateGroup x:Name="DayStates">
											<VisualStateGroup.Transitions>
												<VisualTransition GeneratedDuration="0"/>
											</VisualStateGroup.Transitions>
											<VisualState x:Name="RegularDay"/>
											<VisualState x:Name="Today">
												<Storyboard>
													<DoubleAnimation Storyboard.TargetName="TodayBackground" Storyboard.TargetProperty="Opacity" To="1" Duration="0"/>
													<ColorAnimation Storyboard.TargetName="NormalText" Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" To="#FF333333" Duration="0"/>
												</Storyboard>
											</VisualState>
										</VisualStateGroup>
										<VisualStateGroup x:Name="BlackoutDayStates">
											<VisualStateGroup.Transitions>
												<VisualTransition GeneratedDuration="0"/>
											</VisualStateGroup.Transitions>
											<VisualState x:Name="NormalDay"/>
											<VisualState x:Name="BlackoutDay">
												<Storyboard>
													<DoubleAnimation Storyboard.TargetName="Blackout" Storyboard.TargetProperty="Opacity" To=".2" Duration="0"/>
												</Storyboard>
											</VisualState>
										</VisualStateGroup>
									</VisualStateManager.VisualStateGroups>
									<Rectangle x:Name="TodayBackground" Fill="{x:Null}" Opacity="0" RadiusY="1" RadiusX="1"/>
									<Rectangle x:Name="SelectedBackground" Fill="#FFB6C931" Opacity="0" RadiusY="1" RadiusX="1"/>
									<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"/>
									<Rectangle x:Name="HighlightBackground" Fill="#FFCAD291" Opacity="0" RadiusY="1" RadiusX="1"/>
									<ContentPresenter x:Name="NormalText" TextElement.Foreground="#FF333333" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="5,1,5,1" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
									<Path x:Name="Blackout" Data="M8.1772461,11.029181 L10.433105,11.029181 L11.700684,12.801641 L12.973633,11.029181 L15.191895,11.029181 L12.844727,13.999395 L15.21875,17.060919 L12.962891,17.060919 L11.673828,15.256231 L10.352539,17.060919 L8.1396484,17.060919 L10.519043,14.042364 z" Fill="#FF000000" HorizontalAlignment="Stretch" Margin="3" RenderTransformOrigin="0.5,0.5" Stretch="Fill" VerticalAlignment="Stretch" Opacity="0"/>
									<Rectangle x:Name="DayButtonFocusVisual" IsHitTestVisible="false" Visibility="Collapsed"/>
								</Grid>
							</ControlTemplate>
						</Setter.Value>
					</Setter>
				</Style>
			</Setter.Value>
		</Setter>
		<Setter Property="CalendarItemStyle">
			<Setter.Value>
				<Style TargetType="{x:Type CalendarItem}">
					<Setter Property="Margin" Value="0,3,0,3"/>
					<Setter Property="Template">
						<Setter.Value>
							<ControlTemplate TargetType="{x:Type CalendarItem}">
								<ControlTemplate.Resources>
									<DataTemplate x:Key="{x:Static CalendarItem.DayTitleTemplateResourceKey}">
										<Border BorderBrush="Black" BorderThickness="0.5">
											<TextBlock Foreground="#FF333333" FontWeight="Bold" FontSize="9.5" FontFamily="Verdana" HorizontalAlignment="Center" Margin="0,6,0,6" Text="{Binding}" VerticalAlignment="Center"/>
										</Border>
									</DataTemplate>
								</ControlTemplate.Resources>
								<Grid x:Name="PART_Root">
									<Grid.Resources>
										<SolidColorBrush x:Key="DisabledColor" Color="#A5FFFFFF"/>
									</Grid.Resources>
									<Border CornerRadius="1" BorderThickness="0.5" BorderBrush="Black">
										<Grid>
											<Grid.Resources>
												<ControlTemplate x:Key="PreviousButtonTemplate" TargetType="{x:Type Button}">
													<Border BorderBrush="Black" BorderThickness="0.5">
														<VisualStateManager.VisualStateGroups>
															<VisualStateGroup x:Name="CommonStates">
																<VisualState x:Name="Normal"/>
																<VisualState x:Name="MouseOver">
																	<Storyboard>
																		<ColorAnimation Duration="0" To="#FFB6C931" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="path"/>
																	</Storyboard>
																</VisualState>
																<VisualState x:Name="Disabled">
																	<Storyboard>
																		<DoubleAnimation Duration="0" To=".5" Storyboard.TargetProperty="(Shape.Fill).(Brush.Opacity)" Storyboard.TargetName="path"/>
																	</Storyboard>
																</VisualState>
															</VisualStateGroup>
														</VisualStateManager.VisualStateGroups>
														<Grid Cursor="Hand">
															<Rectangle Fill="#11E5EBF1" Opacity="1" Stretch="Fill"/>
															<Grid>
																<Path x:Name="path" Data="M6,0 L3,5 6,10 0,5 z" Fill="#FF333333" HorizontalAlignment="Center" Height="7.5" Stretch="Fill" VerticalAlignment="Center" Width="8"/>
															</Grid>
														</Grid>
													</Border>
												</ControlTemplate>
												<ControlTemplate x:Key="NextButtonTemplate" TargetType="{x:Type Button}">
													<Border BorderThickness="0.5" BorderBrush="Black">
														<VisualStateManager.VisualStateGroups>
															<VisualStateGroup x:Name="CommonStates">
																<VisualState x:Name="Normal"/>
																<VisualState x:Name="MouseOver">
																	<Storyboard>
																		<ColorAnimation Duration="0" To="#FFB6C931" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="path"/>
																	</Storyboard>
																</VisualState>
																<VisualState x:Name="Disabled">
																	<Storyboard>
																		<DoubleAnimation Duration="0" To=".5" Storyboard.TargetProperty="(Shape.Fill).(Brush.Opacity)" Storyboard.TargetName="path"/>
																	</Storyboard>
																</VisualState>
															</VisualStateGroup>
														</VisualStateManager.VisualStateGroups>
														<Grid Cursor="Hand">
															<Rectangle Fill="#11E5EBF1" Opacity="1" Stretch="Fill"/>
															<Grid>
																<Path x:Name="path" Data="M0,0 L3,5 0,10 6,5 z" Fill="#FF333333" HorizontalAlignment="Center" Height="7.5" Stretch="Fill" VerticalAlignment="Center" Width="8"/>
															</Grid>
														</Grid>
													</Border>
												</ControlTemplate>
												<ControlTemplate x:Key="HeaderButtonTemplate" TargetType="{x:Type Button}">
													<Border BorderThickness="0.5" BorderBrush="Black">
														<VisualStateManager.VisualStateGroups>
															<VisualStateGroup x:Name="CommonStates">
																<VisualState x:Name="Normal"/>
																<VisualState x:Name="MouseOver">
																	<Storyboard>
																		<ColorAnimation Duration="0" To="#FFB6C931" Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="buttonContent"/>
																	</Storyboard>
																</VisualState>
																<VisualState x:Name="Disabled">
																	<Storyboard>
																		<DoubleAnimation Duration="0" To=".5" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="buttonContent"/>
																	</Storyboard>
																</VisualState>
															</VisualStateGroup>
														</VisualStateManager.VisualStateGroups>
														<Grid Cursor="Hand" Height="26.967">
															<ContentPresenter x:Name="buttonContent" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" TextElement.Foreground="#FF333333" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
														</Grid>
													</Border>
												</ControlTemplate>
											</Grid.Resources>
											<Grid.ColumnDefinitions>
												<ColumnDefinition Width="2*"/>
												<ColumnDefinition Width="3*" MinWidth="102.5"/>
												<ColumnDefinition Width="2*" MinWidth="29.5"/>
											</Grid.ColumnDefinitions>
											<Grid.RowDefinitions>
												<RowDefinition Height="Auto"/>
												<RowDefinition Height="*"/>
											</Grid.RowDefinitions>
											<Button x:Name="PART_PreviousButton" Grid.Column="0" Focusable="False" HorizontalAlignment="Stretch" Grid.Row="0" Template="{StaticResource PreviousButtonTemplate}"/>
											<Button x:Name="PART_HeaderButton" Grid.Column="1" FontWeight="Bold" Focusable="False" FontSize="10.5" Grid.Row="0" Template="{StaticResource HeaderButtonTemplate}" VerticalAlignment="Stretch"/>
											<Button x:Name="PART_NextButton" Grid.Column="2" Focusable="False" HorizontalAlignment="Stretch" Grid.Row="0" Template="{StaticResource NextButtonTemplate}"/>
											<Grid x:Name="PART_MonthView" Grid.ColumnSpan="3" HorizontalAlignment="Stretch" Grid.Row="1" Visibility="Visible">
												<Grid.ColumnDefinitions>
													<ColumnDefinition Width="*"/>
													<ColumnDefinition Width="*"/>
													<ColumnDefinition Width="*"/>
													<ColumnDefinition Width="*"/>
													<ColumnDefinition Width="*"/>
													<ColumnDefinition Width="*"/>
													<ColumnDefinition Width="*"/>
												</Grid.ColumnDefinitions>
												<Grid.RowDefinitions>
													<RowDefinition Height="*"/>
													<RowDefinition Height="*"/>
													<RowDefinition Height="*"/>
													<RowDefinition Height="*"/>
													<RowDefinition Height="*"/>
													<RowDefinition Height="*"/>
													<RowDefinition Height="*"/>
												</Grid.RowDefinitions>
											</Grid>
											<Grid x:Name="PART_YearView" Grid.ColumnSpan="3" HorizontalAlignment="Stretch" Margin="0" Grid.Row="1" Visibility="Hidden">
												<Grid.ColumnDefinitions>
													<ColumnDefinition Width="*"/>
													<ColumnDefinition Width="*"/>
													<ColumnDefinition Width="*"/>
													<ColumnDefinition Width="*"/>
												</Grid.ColumnDefinitions>
												<Grid.RowDefinitions>
													<RowDefinition Height="Auto"/>
													<RowDefinition Height="Auto"/>
													<RowDefinition Height="Auto"/>
												</Grid.RowDefinitions>
											</Grid>
										</Grid>
									</Border>
									<Rectangle x:Name="PART_DisabledVisual" Fill="{StaticResource DisabledColor}" Opacity="0" RadiusY="2" RadiusX="2" Stretch="Fill" Stroke="{StaticResource DisabledColor}" StrokeThickness="1" Visibility="Collapsed"/>
								</Grid>
								<ControlTemplate.Triggers>
									<Trigger Property="IsEnabled" Value="False">
										<Setter Property="Visibility" TargetName="PART_DisabledVisual" Value="Visible"/>
									</Trigger>
									<DataTrigger Binding="{Binding DisplayMode, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Calendar}}}" Value="Year">
										<Setter Property="Visibility" TargetName="PART_MonthView" Value="Hidden"/>
										<Setter Property="Visibility" TargetName="PART_YearView" Value="Visible"/>
									</DataTrigger>
									<DataTrigger Binding="{Binding DisplayMode, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Calendar}}}" Value="Decade">
										<Setter Property="Visibility" TargetName="PART_MonthView" Value="Hidden"/>
										<Setter Property="Visibility" TargetName="PART_YearView" Value="Visible"/>
									</DataTrigger>
								</ControlTemplate.Triggers>
							</ControlTemplate>
						</Setter.Value>
					</Setter>
				</Style>

			</Setter.Value>
		</Setter>
	</Style>

	
	
</ResourceDictionary>
